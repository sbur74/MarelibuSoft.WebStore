@model MarelibuSoft.WebStore.Models.ViewModels.ProductDetailViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string plus = Model.ProductID + "_plus";
    string minus = Model.ProductID + "_minus";
    string quantity = Model.ProductID + "_quantity";
    string qunitityPrice = Model.ProductID + "_quantityPrice";
    string availableQunitity = Model.ProductID + "_availableQuantity";
    string sellactitid = Model.ProductID + "_sellActionItemId";
    decimal streichPreis = Math.Round(Model.OrgPrice, 2);
    decimal startPrice = Math.Round((Model.Price * Model.MinimumPurchaseQuantity), 2);
}
@*@Html.SpMetaDescription(Model.SeoDescription)*@
<h1>@Html.DisplayFor(model => model.ProductNumber)</h1>
<h2>@Html.DisplayFor(model => model.Name)</h2>

<div class="hidden">
    @Html.AntiForgeryToken()
</div>

<div onload="marelibusoft.common.changeMetaDesc('@Model.Description');">
    <hr />
    <div class="row">
        <div class="col-md-5">
            <img id="expandedImg" src="~/images/store/@Model.MainImageUrl.ImageUrl" alt="@Model.MainImageUrl.Name" class="img-responsive" style="max-height: 75%; max-width: 75%;" />
            <br />
            <div class="table table-responsive">
                @foreach (var item in Model.ImageUrls)
                {
                    <img src="~/images/store/@Html.DisplayFor(modelitem => item.ImageUrl)" alt="@Html.DisplayFor(modelItem => item.Name)" class="img-rounded tab-content" style="max-height:100px; max-width:100px; cursor:pointer;" onclick="myFunction(this);" />
                }
            </div>
            <script>
                function myFunction(imgs) {
                    var expandImg = document.getElementById("expandedImg");
                    var imgText = document.getElementById("imgtext");
                    expandImg.src = imgs.src;
                    imgText.innerHTML = imgs.alt;
                    expandImg.parentElement.style.display = "block";
                }
            </script>
        </div>
        <div class="col-md-7">
            <div class="jumbotron item">
                @if (streichPreis > 0)
                {
                    <span class="notify-badge">
                        <b>@Html.DisplayFor(model => model.SellActionPrecent)<i class="fa fa-percent"></i></b>
                        <br />
                        <span style="font-size:10px;">@Html.DisplayNameFor(model => model.SellActionPrecent).ToUpper()</span>
                    </span>
                }
                @if (Model.IsNew)
                {
                    <span class="notify-new-badge">
                        <b>NEU</b>
                    </span>
                }
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.ProductNumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ProductNumber)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Name)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ShortDescription)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ShortDescription)
                    </dd>
                    @if (streichPreis > 0)
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Price)
                        </dt>
                        <dd>
                            <span class="text-danger">@Html.DisplayFor(model => model.Price)/@Html.DisplayFor(model => model.BasesUnit)</span>
                            (<s>@Html.DisplayFor(model => model.OrgPrice)/@Html.DisplayFor(model => model.BasesUnit)</s>)
                            @if (!string.IsNullOrWhiteSpace(Model.SecondPriceUnit))
                            {
                                <span>;</span><span class="text-danger"> @Html.DisplayFor(model => model.SecondPriceUnit)</span>
                            }
                        </dd>
                    }
                    else
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Price)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Price)/@Html.DisplayFor(model => model.BasesUnit)
                            @if (!string.IsNullOrWhiteSpace(Model.SecondPriceUnit))
                            {
                                <span>;</span> @Html.DisplayFor(model => model.SecondPriceUnit)
                            }
                        </dd>
                    }
                    <dt>
                        @Html.DisplayNameFor(model => model.MinimumPurchaseQuantity)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.MinimumPurchaseQuantity) @Html.DisplayFor(model => model.BasesUnit)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Size)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Size)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ShippingTime)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ShippingTime)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.AvailableQuantity)
                    </dt>
                    <dd>
                        <span id="@availableQunitity">@Math.Round(Model.AvailableQuantity, 2)</span> <span>@Model.BasesUnit</span>
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Shipping)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Shipping)
                    </dd>
                </dl>
            </div>
            <section>
                <p class="label label-default" style="font-size:medium"><span id="@qunitityPrice">@startPrice &euro; <b>*</b></span>  <small><a asp-area="" asp-controller="Home" asp-action="PaymendAndShipping">zzgl. Versand</a></small></p>
                <br />
                <div class="input-group col-md-4">
                    <span class="input-group-btn">
                        <button id="@minus" type="button" class="btn btn-primary" onclick="subQuantity(@Model.ProductID,'@Model.MinimumPurchaseQuantity','@Model.Price');"><i class="glyphicon glyphicon-minus-sign"></i></button>
                    </span>
                    <input id="@sellactitid" type="hidden" value="@Model.SellActionItemId" />
                    <input id="@quantity" style="text-align:right;" class="form-control" value="@Html.DisplayFor(model => model.MinimumPurchaseQuantity)"
                           onload="quantityPrice(@Model.ProductID,'@Model.Price');"
                           onchange="quantityPrice(@Model.ProductID, '@Model.Price');" />
                    <span class="input-group-btn">
                        <button id="@plus" class="btn btn-primary" type="button" onclick="addQuantity(@Model.ProductID,'@Model.MinimumPurchaseQuantity','@Model.Price');"><i class="glyphicon glyphicon-plus-sign"></i></button>
                    </span>
                </div>
                <div class="form-group">
                    <a id="item" class="btn btn-primary" role="button" onclick="postCartLine(@Model.ProductID, '@Model.BasesUnitID','@Model.Price');">
                        <span class="glyphicon glyphicon-shopping-cart"></span> in den Warenkorb
                    </a>
                </div>
            </section>
        </div>
    </div>
    <div class="jumbotron">
        <h4>@Html.DisplayNameFor(model => model.Description)</h4>
        <section>
            <article>
                @Html.Raw(Model.Description)
            </article>
        </section>
    </div>
    <br />

</div>
<hr />
@*@await Html.PartialAsync("_ChCustomerInfoPartial")*@
@await Html.PartialAsync("_TaxInfoPartial")
@await Html.PartialAsync("_TechInfoPartial")
